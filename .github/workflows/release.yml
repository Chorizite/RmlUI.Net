name: Release

on:
  push:
    tags:
      - "release/*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.2
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: version_step # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.1.2
        
      - name: Make Changelog
        run: |
          git log --pretty=format:"%s%n%b" --no-merges $(git describe --tags --abbrev=0 @^)..@ | sed '/^[[:space:]]*$/d' > changelog.md
          cat changelog.md

      - name: Build
        run: |
          dotnet restore               # install packages
          dotnet build -c Release --no-restore -p:PackageReleaseNotes="$(cat changelog.md 2>/dev/null)"   # build
          zip RmlUi.Net-${{ env.GitVersion_FullSemVer }}.zip "${{ github.workspace }}/RmlUi.Net/bin/Release/net8.0/"
          
      - uses: actions/upload-artifact@v4
        with: 
          name: packages
          path: "${{ github.workspace }}/RmlUi.Net/bin/Release/RmlUi.Net.${{ env.GitVersion_FullSemVer }}.nupkg"
      
      - uses: actions/upload-artifact@v4
        with: 
          name: packages
          path: "RmlUi.Net-${{ env.GitVersion_FullSemVer }}.zip"
      
      - name: Push GitHub NuGet Package
        run: |
          dotnet nuget add source --username Chorizite --password ${{ secrets.CI_NUGET_API_KEY }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Chorizite/index.json"
          dotnet nuget push "${{ github.workspace }}/RmlUi.Net/bin/Release/RmlUi.Net.${{ env.GitVersion_FullSemVer }}.nupkg" --api-key ${{ secrets.CI_NUGET_API_KEY }} --source "github"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./RmlUi.Net.${{ env.GitVersion_FullSemVer }}.zip
          asset_name: RmlUi.Net.${{ env.GitVersion_FullSemVer }}.zip
          asset_content_type: application/zip